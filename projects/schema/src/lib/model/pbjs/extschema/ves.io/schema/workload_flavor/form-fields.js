export const formFieldsCreate = {
	key: 'CreateRequest',
	type: 'object',
	isViewObject: 'false',
	displayName: 'Test',
	namespaceConstraint: ['shared'],
	fields: [
		{
			key: 'metadata',
			pbType: 'ves.io.schema.ObjectCreateMetaType',
			position: 1,
			comment: [
				'Common attributes that can be set during create for all configuration objects like name, labels etc.',
			],
			inlineComments: null,
			required: false,
			label: 'Metadata',
			type: 'object',
			directRefOptions: {},
			displayOrder: [1, 2, 4, 5, 6, 7],
			formLabel: 'Metadata',
			fields: [
				{
					key: 'name',
					pbType: 'string',
					position: 1,
					comment: [
						'The configuration object will be created with name. It has to be unique within the namespace.',
						'The value of name has to follow DNS-1035 format.',
					],
					inlineComments: null,
					required: true,
					example: ['acmecorp-web'],
					label: 'Name',
					type: 'string',

					validators: {
						XMessageRequired: 'true',
					},
				},
				{
					key: 'namespace',
					pbType: 'string',
					position: 2,
					comment: [
						'This defines the workspace within which each the configuration object is to be created.',
						'Must be a DNS_LABEL format. For a namespace object itself, namespace value will be ""',
					],
					inlineComments: null,
					required: false,
					example: ['staging'],
					label: 'Namespace',
					type: 'string',
				},
				{
					key: 'labels',
					pbType: 'string',
					position: 4,
					mapStyle: 'MAP_RENDER_LABELS',
					comment: [
						'Map of string keys and values that can be used to organize and categorize',
						'(scope and select) objects as chosen by the user. Values specified here will be used',
						'by selector expression',
					],
					inlineComments: null,
					required: false,
					example: ['value'],
					label: 'Labels',
					type: 'labels',
					options: { mapKeyType: 'string' },
				},
				{
					key: 'annotations',
					pbType: 'string',
					position: 5,
					newForm: true,
					mapStyle: 'MAP_RENDER_TABLE',
					comment: [
						'Annotations is an unstructured key value map stored with a resource that may be',
						'set by external tools to store and retrieve arbitrary metadata. They are not',
						'queryable and should be preserved when modifying objects.',
					],
					inlineComments: null,
					required: false,
					example: ['value'],
					label: 'Annotations',
					type: 'labels',
					options: { mapKeyType: 'string' },
					validators: {
						XMapKeysStringMaxLen: '64',
						XMapKeysStringMinLen: '1',
						XMapValuesStringMaxLen: '1024',
						XMapValuesStringMinLen: '1',
					},
				},
				{
					key: 'description',
					pbType: 'string',
					position: 6,
					comment: ['Human readable description for the object'],
					inlineComments: null,
					required: false,
					example: ['Virtual Host for acmecorp website'],
					label: 'Description',
					type: 'string',
				},
				{
					key: 'disable',
					pbType: 'bool',
					position: 7,
					comment: ['A value of true will administratively disable the object'],
					inlineComments: null,
					required: false,
					example: ['true'],
					label: 'Disable',
					type: 'bool',
				},
			],
		},
	],
};

